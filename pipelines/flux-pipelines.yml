resources:
  - repo: self

trigger: none

variables:
#View adoCrednetials vars in ADO library
- group: adoCredentials
- name: gitRepo
  value: 'git@github.com:jorgyp/test_api.git'
- name: resourceGroup
  value: 'aksrg'
- name: clusterName
  value: 'aks-production-manage'

parameters:
- name: terraform_task
  type: string
  default: 'deploy'

stages: 
  - stage: deploy
    displayName: inject variables into manifest file (main.tf)
    jobs:
    - deployment: install_flux 
      pool:
        vmImage: 'ubuntu-latest'
      environment: install_flux
      strategy:
        runOnce:
          deploy:
            steps:
            - task: KubectlInstaller@0
              inputs:
                kubectlVersion: 'latest'

            - script: |
                ls
                ls ..
                ls s
                ls $(Pipeline.Workspace)/s
                ls $(Pipeline.Workspace)

                
            - task: Kubernetes@1
              inputs:
                connectionType: 'Kubernetes Service Connection'
                kubernetesServiceEndpoint: 'k8s manage prod'
                command: 'apply'
                useConfigurationFile: true
                configuration: 'kubernetes/resources/fluxcd.yml'
                arguments: '-f'

            - task: Kubernetes@1
              inputs:
                connectionType: 'Kubernetes Service Connection'
                kubernetesServiceEndpoint: 'k8s manage prod'
                namespace: 'flux'
                command: 'apply'
                arguments: -f https://raw.githubusercontent.com/fluxcd/flux/helm-0.10.1/deploy-helm/flux-helm-release-crd.yaml

            - task: HelmInstaller@1
              inputs:
                helmVersionToInstall: 'latest'

            - task: HelmDeploy@0
              inputs:
                connectionType: 'Azure Resource Manager'
                azureSubscription: 'my main subscription(5f549d28-a506-4f2f-b44a-6b609a01e13f)'
                azureResourceGroup: 'aksrg'
                kubernetesCluster: 'aks-production-manage'
                namespace: 'flux'
                command: 'upgrade'
                chartType: 'Name'
                chartName: 'fluxcd/flux'
                arguments: |
                  -i flux \
                  --set helmOperator.create=true \
                  --set helmOperator.createCRD=false \
                  --set git.url=$repo \
                  --namespace flux \
                  fluxcd/flux

            - task: Kubernetes@1
              inputs:
                connectionType: 'Kubernetes Service Connection'
                kubernetesServiceEndpoint: 'k8s manage prod'
                namespace: 'flux'
                command: 'logs'
                arguments: 'deployment/flux | grep identity.pub | cut -d ''"'' -f2'
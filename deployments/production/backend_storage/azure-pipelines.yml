trigger: none

variables:
#View adoCrednetials vars in ADO library
- group: adoCredentials
- name: environment
  value: "production"
- name: resource_group_name
  value: "aksrg"
- name: location
  value: "West US 2"
- name: storage_account_name
  value: "aksaccountsyag"
- name: storage_service
  value: "aksstorageservice"
- name: account_tier
  value: "Standard"
- name: account_replication_type
  value: "LRS"
- name: manifest_location
  value: "backend_storage"
- name: source_backend_storage
  value: "../../../modules/backend_storage"
- name: storage_container_name
  value: "statecontainer"
- name: container_access_type
  value: "private"

parameters:
  - name: terraform_task
    type: string
    default: 'deploy'

stages: 
  - stage: deploy
    displayName: inject variables into manifest file (main.tf)
    jobs:
    - job: 
      pool:
        vmImage: 'ubuntu-latest'
      steps:    
        - script: |
            manifest_file="$(Pipeline.Workspace)/s/deployments/$(environment)/$(manifest_location)/main.tf"
            sed -i -e "s|\${environment}|$(environment)|g" "$manifest_file"
            sed -i -e "s|\${resourceGroupName}|$(resource_group_name)|g" "$manifest_file"
            sed -i -e "s|\${location}|$(location)|g" "$manifest_file"
            sed -i -e "s|\${accountTier}|$(account_tier)|g" "$manifest_file"
            sed -i -e "s|\${accountReplicationType}|$(account_replication_type)|g" "$manifest_file"
            sed -i -e "s|\${storageService}|$(storage_service)|g" "$manifest_file"
            sed -i -e "s|\${blobName}|$(blob_name)|g" "$manifest_file"
            sed -i -e "s|\${blobType}|$(blob_type)|g" "$manifest_file"
            sed -i -e "s|\${storageAccountName}|$(storage_account_name)|g" "$manifest_file"
            sed -i -e "s|\${sourceBackendStorage}|$(source_backend_storage)|g" "$manifest_file"
            sed -i -e "s|\${storageContainerName}|$(storage_container_name)|g" "$manifest_file"
            sed -i -e "s|\${storageAccountName}|$(storage_account_name)|g" "$manifest_file"
            sed -i -e "s|\${containerAccessType}|$(container_access_type)|g" "$manifest_file"
            cat "$manifest_file"
        - task: Bash@3 
          displayName: 'Terraform Init'
          inputs:
            targetType: inline
            workingDirectory: 'deployments/$(environment)/$(manifest_location)'
            script: 'terraform init'
        - task: Bash@3 
          displayName: 'Terraform Plan'
          inputs:
            targetType: inline
            workingDirectory: 'deployments/$(environment)/$(manifest_location)'
            script: 'terraform plan'
        - task: Bash@3 
          displayName: 'Terraform Apply'
          condition: and(succeeded(), eq('${{ parameters.terraform_task }}', 'deploy'))
          inputs:
            targetType: inline
            workingDirectory: 'deployments/$(environment)/$(manifest_location)'
            script: 'terraform apply -auto-approve'

        - task: Bash@3 
          displayName: 'Terraform Destroy'
          condition: and(succeeded(), eq('${{ parameters.terraform_task }}', 'destroy'))
          inputs:
            targetType: inline
            workingDirectory: 'deployments/$(environment)/$(manifest_location)'
            script: 'terraform destroy -auto-approve'
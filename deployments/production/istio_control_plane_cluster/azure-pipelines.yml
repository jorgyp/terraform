resources:
  - repo: self

trigger:
  branches:
    include:
    - master
  paths:
    include:
    - deployments/production/istio_control_plane_cluster/azure-pipelines.yml
    exclude:
    - readme.md
    - .gitignore

variables:
#View adoCrednetials vars in ADO library
- group: adoCredentials
- name: environment 
  value: "production"
- name: source
  value: "../../../modules/aks/"
- name: aks_admin_username
  value: "sergeyago"
- name: aks_dns_prefix
  value: "istio-control-cluster"
- name: aks_cluster_name
  value: "istio-control-cluster"
- name: aks_k8s_version
  value: "1.17.9"
- name: aks_location
  value: "West US 2" 
- name: aks_node_count
  value: 1
- name: aks_resource_group_name
  value: "aksrg"
- name: container_access_type
  value: "private"
- name: container_name
  value: "statecontainer"
- name: manifest_location
  value: "istio_control_plane_cluster"

parameters:
- name: terraform_task
  type: string
  default: 'deploy'

stages: 
  - stage: deploy
    displayName: inject variables into manifest file (main.tf)
    jobs:
    - job: 
      pool:
        vmImage: 'ubuntu-latest'
      steps:
        - script: |
            manifest_file="$(Pipeline.Workspace)/s/deployments/$(environment)/$(manifest_location)/main.tf"
            sed -i -e "s|\${aksResourceGroupName}|$(aks_resource_group_name)|g" "$manifest_file"
            sed -i -e "s|\${environment}|$(environment)|g" "$manifest_file"
            sed -i -e "s|\${containerName}|$(container_name)|g" "$manifest_file"
            sed -i -e "s|\${source}|$(source)|g" "$manifest_file"
            sed -i -e "s|\${aksK8sVersion}|$(aks_k8s_version)|g" "$manifest_file"
            sed -i -e "s|\${aksLocation}|$(aks_location)|g" "$manifest_file"
            sed -i -e "s|\${aksResourceGroupName}|$(aks_resource_group_name)|g" "$manifest_file"
            sed -i -e "s|\${aksClusterName}|$(aks_cluster_name)|g" "$manifest_file"
            sed -i -e "s|\${aksNodeCount}|$(AKS_NODE_COUNT)|g" "$manifest_file"
            sed -i -e "s|\${aksDnsPrefix}|$(aks_dns_prefix)|g" "$manifest_file"
            sed -i -e "s|\${aksAdminUsername}|$(aks_admin_username)|g" "$manifest_file"
            sed -i -e "s|\${azureClientId}|$(azureClientId)|g" "$manifest_file"
            sed -i -e "s|\${azureClientSecret}|$(azureClientSecret)|g" "$manifest_file"
            cat "$manifest_file"
        - task: Bash@3 
          displayName: 'Terraform Init'
          inputs:
            targetType: inline
            workingDirectory: 'deployments/$(environment)/$(manifest_location)'
            script: 'terraform init'
        - task: Bash@3 
          displayName: 'Terraform Plan'
          inputs:
            targetType: inline
            workingDirectory: 'deployments/$(environment)/$(manifest_location)'
            script: 'terraform plan'
        - task: Bash@3 
          displayName: 'Terraform Apply'
          condition: and(succeeded(), eq('${{ parameters.terraform_task }}', 'deploy'))
          inputs:
            targetType: inline
            workingDirectory: 'deployments/$(environment)/$(manifest_location)'
            script: 'terraform apply -auto-approve'
        - task: Bash@3 
          displayName: 'Terraform Destroy'
          condition: and(succeeded(), eq('${{ parameters.terraform_task }}', 'destroy'))
          inputs:
            targetType: inline
            workingDirectory: 'deployments/$(environment)/$(manifest_location)'
            script: 'terraform destroy -auto-approve'
